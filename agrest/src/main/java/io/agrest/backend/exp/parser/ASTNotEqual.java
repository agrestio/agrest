/* Generated By:JJTree: Do not edit this line. ASTNotEqual.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package io.agrest.backend.exp.parser;

import io.agrest.backend.exp.Expression;

/**
 * "Not equal to" expression.
 *
 */
public class ASTNotEqual extends ConditionNode {

    ASTNotEqual(int id) {
        super(id);
    }

    public ASTNotEqual() {
        super(ExpressionParserTreeConstants.JJTNOTEQUAL);
    }

    /**
     * Creates "Not Equal To" expression.
     */
    public ASTNotEqual(SimpleNode path, Object value) {
        super(ExpressionParserTreeConstants.JJTNOTEQUAL);
        jjtAddChild(path, 0);
        jjtAddChild(new ASTScalar(value), 1);
        connectChildren();
    }

    @Override
    public Expression shallowCopy() {
        return new ASTNotEqual(id);
    }

    @Override
    public int getType() {
        return Expression.NOT_EQUAL_TO;
    }
}
/* JavaCC - OriginalChecksum=9e95ce9ec6ad624a12d34046c31419a7 (do not edit this line) */
