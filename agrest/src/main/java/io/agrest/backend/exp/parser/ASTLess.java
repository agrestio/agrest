/* Generated By:JJTree: Do not edit this line. ASTLess.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package io.agrest.backend.exp.parser;

import io.agrest.backend.exp.Expression;

/**
 * "Less Then" expression.
 *
 */
public class ASTLess extends ConditionNode {

    /**
     * Constructor used by expression parser. Do not invoke directly.
     */
    ASTLess(int id) {
        super(id);
    }

    public ASTLess() {
        super(ExpressionParserTreeConstants.JJTLESS);
    }

    public ASTLess(SimpleNode path, Object value) {
        super(ExpressionParserTreeConstants.JJTLESS);
        jjtAddChild(path, 0);
        jjtAddChild(new ASTScalar(value), 1);
        connectChildren();
    }

    /**
     * Creates a copy of this expression node, without copying children.
     */
    @Override
    public Expression shallowCopy() {
        return new ASTLess(id);
    }

    @Override
    public int getType() {
        return Expression.LESS_THAN;
    }

}
/* JavaCC - OriginalChecksum=de59bf32f79edfe8fff2496c77c29d77 (do not edit this line) */
