/* Generated By:JJTree: Do not edit this line. ExpBitwiseAnd.java Version 7.0 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=Exp,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package io.agrest.exp.parser;

public
class ExpBitwiseAnd extends SimpleNode {
  public ExpBitwiseAnd(int id) {
    super(id);
  }

  public ExpBitwiseAnd(AgExpressionParser p, int id) {
    super(p, id);
  }

  public ExpBitwiseAnd() {
    super(AgExpressionParserTreeConstants.JJTBITWISEAND);
  }

  /** Accept the visitor. **/
  public <T> T jjtAccept(AgExpressionParserVisitor<T> visitor, T data) {

    return
    visitor.visit(this, data);
  }

  @Override
  protected SimpleNode shallowCopy() {
    return new ExpBitwiseAnd(id);
  }

  @Override
  public String toString() {
    return children != null
            ? "(" + children[0] + ") & (" + children[1] + ")"
            : "? & ?";
  }
}
/* JavaCC - OriginalChecksum=114e39f3e98a01e9d633fb36f9cdc27e (do not edit this line) */
